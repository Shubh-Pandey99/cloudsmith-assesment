name: Promote Python Package

on:
  repository_dispatch:
    types: [cloudsmith-package-synced]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: ${{ vars.CLOUDSMITH_STAGING_REPO }}
  CLOUDSMITH_PRODUCTION_REPO: ${{ vars.CLOUDSMITH_PRODUCTION_REPO }}
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PROMOTION_TAG: 'ready-for-production'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Query and tag the latest package with 'ready-for-production'
        run: |
          PACKAGE_NAME="${{ github.event.client_payload.package_name }}"
          echo "Received webhook for package: $PACKAGE_NAME"
          
          PACKAGE_QUERY="name:$PACKAGE_NAME"
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)
          
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')
          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" == "null" ]; then
            echo "No synced package found for $PACKAGE_NAME"
            exit 1
          fi

          echo "Tagging package $IDENTIFIER with '$PROMOTION_TAG'"
          cloudsmith tag add --yes ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER $PROMOTION_TAG

      - name: Promote all packages with 'ready-for-production' tag
        run: |
          echo "Searching for all packages tagged with '$PROMOTION_TAG' in staging repo..."
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} --tag $PROMOTION_TAG -F json)
          
          COUNT=$(echo "$PACKAGE_DATA" | jq '.data | length')
          if [ "$COUNT" -eq "0" ]; then
            echo "No packages found with tag '$PROMOTION_TAG'"
            exit 0
          fi

          echo "Found $COUNT packages. Starting promotion to production repo..."
          for IDENTIFIER in $(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm'); do
            echo "Promoting $IDENTIFIER"
            cloudsmith mv --yes ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
          done
