name: Promote Python Package

on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Package version to promote (e.g., 0.0.1)'
        required: true
        type: string

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  READY_TAG: 'ready-for-production'
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Tag the package with ready-for-production
        run: |
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${{ github.event.client_payload.package_version }}.tar.gz"
          echo "Querying package: $PACKAGE_QUERY"

          PACKAGE_DATA=$(cloudsmith list package $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO -q "$PACKAGE_QUERY" -F json)

          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')
          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" == "null" ]; then
            echo "Package not found for tagging."
            exit 1
          fi

          echo "Tagging package $IDENTIFIER with '$READY_TAG'"
          cloudsmith tag add --yes $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/$IDENTIFIER $READY_TAG

      - name: Promote tagged packages
        run: |
          echo "Finding all packages with tag: $READY_TAG"
          PACKAGE_DATA=$(cloudsmith list package $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO --tag $READY_TAG -F json)

          COUNT=$(echo "$PACKAGE_DATA" | jq '.data | length')
          if [ "$COUNT" -eq "0" ]; then
            echo "No packages found with tag '$READY_TAG'."
            exit 1
          fi

          echo "$COUNT packages found with '$READY_TAG' tag. Promoting..."

          for IDENTIFIER in $(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm'); do
            echo "Promoting $IDENTIFIER"
            cloudsmith mv --yes $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/$IDENTIFIER $CLOUDSMITH_PRODUCTION_REPO
          done
